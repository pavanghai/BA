import base64

# Original string
original_string = "Hello, World!"

# Encode to bytes, then to Base64
encoded_bytes = base64.b64encode(original_string.encode('utf-8'))
encoded_string = encoded_bytes.decode('utf-8')

print("Encoded:", encoded_string)


# Base64 encoded string
base64_string = encoded_string

# Decode from Base64 to bytes, then to string
decoded_bytes = base64.b64decode(base64_string.encode('utf-8'))
decoded_string = decoded_bytes.decode('utf-8')

print("Decoded:", decoded_string)

hadoop credential get mysecretkey -provider jceks://file/path/to/yourfile.jceks

hadoop credential get doc_sql_connect -provider jceks://hdfs/path/to/yourfile.jceks

------------------------------
‚úÖ Here's What to Do in TOAD:
Open TOAD for SQL Server
Connect to the server where you want to check authentication
Open a new SQL Editor window
Paste and run these queries:

üîç To check the authentication mode:
SELECT SERVERPROPERTY('IsIntegratedSecurityOnly') AS IsIntegratedSecurityOnly;
üîç To check if pavuser is a SQL login:
SELECT name, type_desc FROM sys.server_principals
WHERE type_desc = 'SQL_LOGIN' AND name = 'pavuser';
üîç To see all SQL logins (optional):
SELECT name, type_desc FROM sys.server_principals
WHERE type_desc = 'SQL_LOGIN';
üß† Result Interpretation:
If the first query returns 0 ‚Üí Mixed Mode is enabled (you can use SQL logins like UID + PWD)
If the second query returns a row ‚Üí pavuser is a SQL-auth login and should work with pyodbc using UID/PWD.
--------------------------
